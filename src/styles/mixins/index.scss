@mixin size($val) {
  height: $val;
  width: $val;
}

@mixin background($path) {
  background-image: url($path);
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
}

@mixin between-children {
  &>:not(:last-child) {
    @content;
  }
}

@mixin breakpoint-width($min, $max : 0) {
  @if ($max == 0) {
    @media only screen
    and (min-width: $min) { @content; }
  } @else {
    @media only screen
    and (min-width: $min)
    and (max-width: $max - 1) { @content; }
  }
}

@mixin breakpoint-height($min, $max : 0) {
  @if ($max == 0) {
    @media only screen
    and (min-height: $min) { @content; }
  } @else {
    @media only screen
    and (min-height: $min)
    and (max-height: $max - 1) { @content; }
  }
}

@mixin breakpoint($args...) {
  @include breakpoint-width($args...) {
    @content;
  }
}

@mixin breakpoint-min-width-or-min-height($min-width, $min-height) {
  @media only screen and (min-width: $min-width) and (min-height: $min-height) {
    @content;
  }
}

@mixin bounded-width-wrapper($max-width: 1424px) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
}

@mixin flex-layout($align-items: center, $justify-content: center) {
  display: flex;
  align-items: $align-items;
  justify-content: $justify-content;
}
